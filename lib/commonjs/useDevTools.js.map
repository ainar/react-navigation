{"version":3,"sources":["useDevTools.tsx"],"names":["useDevTools","name","reset","state","enabled","devToolsRef","React","useRef","process","env","NODE_ENV","global","__REDUX_DEVTOOLS_EXTENSION__","current","undefined","connect","devTools","lastStateRef","actions","useEffect","init","subscribe","message","type","JSON","parse","trackState","useCallback","getState","length","send","shift","pop","trackAction","action","push"],"mappings":";;;;;;;AAAA;;;;;;AAsCe,SAASA,WAAT,CAAqB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,KAAf;AAAsBC,EAAAA;AAAtB,CAArB,EAA+D;AAC5E,QAAMC,WAAW,GAAGC,KAAK,CAACC,MAAN,EAApB;;AAEA,MACEH,OAAO,IACPI,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YADzB,IAEAC,MAAM,CAACC,4BAFP,IAGAP,WAAW,CAACQ,OAAZ,KAAwBC,SAJ1B,EAKE;AACAT,IAAAA,WAAW,CAACQ,OAAZ,GAAsBF,MAAM,CAACC,4BAAP,CAAoCG,OAApC,CAA4C;AAAEd,MAAAA;AAAF,KAA5C,CAAtB;AACD;;AAED,QAAMe,QAAQ,GAAGX,WAAW,CAACQ,OAA7B;AACA,QAAMI,YAAY,GAAGX,KAAK,CAACC,MAAN,CAAoBJ,KAApB,CAArB;AACA,QAAMe,OAAO,GAAGZ,KAAK,CAACC,MAAN,CAA4C,EAA5C,CAAhB;AAEAD,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AACpBH,IAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEI,IAAV,CAAeH,YAAY,CAACJ,OAA5B;AACD,GAFD,EAEG,CAACG,QAAD,CAFH;AAIAV,EAAAA,KAAK,CAACa,SAAN,CACE,MACEH,QADF,aACEA,QADF,uBACEA,QAAQ,CAAEK,SAAV,CAAqBC,OAAD,IAAa;AAC/B,QAAIA,OAAO,CAACC,IAAR,KAAiB,UAAjB,IAA+BD,OAAO,CAACnB,KAA3C,EAAkD;AAChDD,MAAAA,KAAK,CAACsB,IAAI,CAACC,KAAL,CAAWH,OAAO,CAACnB,KAAnB,CAAD,CAAL;AACD;AACF,GAJD,CAFJ,EAOE,CAACa,QAAD,EAAWd,KAAX,CAPF;AAUA,QAAMwB,UAAU,GAAGpB,KAAK,CAACqB,WAAN,CAChBC,QAAD,IAA2B;AACzB,QAAI,CAACZ,QAAL,EAAe;AACb;AACD;;AAED,WAAOE,OAAO,CAACL,OAAR,CAAgBgB,MAAhB,GAAyB,CAAhC,EAAmC;AACjCb,MAAAA,QAAQ,CAACc,IAAT,CAAcZ,OAAO,CAACL,OAAR,CAAgBkB,KAAhB,EAAd,EAAuCd,YAAY,CAACJ,OAApD;AACD;;AAED,UAAMV,KAAK,GAAGyB,QAAQ,EAAtB;;AAEA,QAAIV,OAAO,CAACL,OAAR,CAAgBgB,MAApB,EAA4B;AAC1Bb,MAAAA,QAAQ,CAACc,IAAT,CAAcZ,OAAO,CAACL,OAAR,CAAgBmB,GAAhB,EAAd,EAAqC7B,KAArC;AACD,KAFD,MAEO;AACLa,MAAAA,QAAQ,CAACc,IAAT,CAAc,WAAd,EAA2B3B,KAA3B;AACD;;AAEDc,IAAAA,YAAY,CAACJ,OAAb,GAAuBV,KAAvB;AACD,GAnBgB,EAoBjB,CAACa,QAAD,CApBiB,CAAnB;AAuBA,QAAMiB,WAAW,GAAG3B,KAAK,CAACqB,WAAN,CACjBO,MAAD,IAAuC;AACrC,QAAI,CAAClB,QAAL,EAAe;AACb;AACD;;AAEDE,IAAAA,OAAO,CAACL,OAAR,CAAgBsB,IAAhB,CAAqBD,MAArB;AACD,GAPiB,EAQlB,CAAClB,QAAD,CARkB,CAApB;AAWA,SAAO;AACLiB,IAAAA,WADK;AAELP,IAAAA;AAFK,GAAP;AAID","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  NavigationState,\r\n  NavigationAction,\r\n  PartialState,\r\n} from '@react-navigation/routers';\r\n\r\ntype State = NavigationState | PartialState<NavigationState> | undefined;\r\n\r\ntype Options = {\r\n  enabled: boolean;\r\n  name: string;\r\n  reset: (state: NavigationState) => void;\r\n  state: State;\r\n};\r\n\r\ntype DevTools = {\r\n  init(value: any): void;\r\n  send(action: any, value: any): void;\r\n  subscribe(\r\n    listener: (message: { type: string; [key: string]: any }) => void\r\n  ): () => void;\r\n};\r\n\r\ndeclare global {\r\n  // eslint-disable-next-line @typescript-eslint/no-namespace\r\n  namespace NodeJS {\r\n    interface Global {\r\n      __REDUX_DEVTOOLS_EXTENSION__:\r\n        | {\r\n            connect(options: { name: string }): DevTools;\r\n            disconnect(): void;\r\n          }\r\n        | undefined;\r\n    }\r\n  }\r\n}\r\n\r\nexport default function useDevTools({ name, reset, state, enabled }: Options) {\r\n  const devToolsRef = React.useRef<DevTools>();\r\n\r\n  if (\r\n    enabled &&\r\n    process.env.NODE_ENV !== 'production' &&\r\n    global.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    devToolsRef.current === undefined\r\n  ) {\r\n    devToolsRef.current = global.__REDUX_DEVTOOLS_EXTENSION__.connect({ name });\r\n  }\r\n\r\n  const devTools = devToolsRef.current;\r\n  const lastStateRef = React.useRef<State>(state);\r\n  const actions = React.useRef<(NavigationAction | string)[]>([]);\r\n\r\n  React.useEffect(() => {\r\n    devTools?.init(lastStateRef.current);\r\n  }, [devTools]);\r\n\r\n  React.useEffect(\r\n    () =>\r\n      devTools?.subscribe((message) => {\r\n        if (message.type === 'DISPATCH' && message.state) {\r\n          reset(JSON.parse(message.state));\r\n        }\r\n      }),\r\n    [devTools, reset]\r\n  );\r\n\r\n  const trackState = React.useCallback(\r\n    (getState: () => State) => {\r\n      if (!devTools) {\r\n        return;\r\n      }\r\n\r\n      while (actions.current.length > 1) {\r\n        devTools.send(actions.current.shift(), lastStateRef.current);\r\n      }\r\n\r\n      const state = getState();\r\n\r\n      if (actions.current.length) {\r\n        devTools.send(actions.current.pop(), state);\r\n      } else {\r\n        devTools.send('@@UNKNOWN', state);\r\n      }\r\n\r\n      lastStateRef.current = state;\r\n    },\r\n    [devTools]\r\n  );\r\n\r\n  const trackAction = React.useCallback(\r\n    (action: NavigationAction | string) => {\r\n      if (!devTools) {\r\n        return;\r\n      }\r\n\r\n      actions.current.push(action);\r\n    },\r\n    [devTools]\r\n  );\r\n\r\n  return {\r\n    trackAction,\r\n    trackState,\r\n  };\r\n}\r\n"]}
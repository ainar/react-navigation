{"version":3,"sources":["useOnGetState.tsx"],"names":["useOnGetState","getStateForRoute","getState","addStateGetter","React","useContext","NavigationBuilderContext","route","NavigationRouteContext","key","getRehydratedState","useCallback","state","routes","map","useEffect"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;;;;;;;;;;;AAEe,SAASA,aAAT,CAAuB;AACpCC,EAAAA,gBADoC;AAEpCC,EAAAA;AAFoC,CAAvB,EAMZ;AACD,QAAM;AAAEC,IAAAA;AAAF,MAAqBC,KAAK,CAACC,UAAN,CAAiBC,iCAAjB,CAA3B;AACA,QAAMC,KAAK,GAAGH,KAAK,CAACC,UAAN,CAAiBG,+BAAjB,CAAd;AACA,QAAMC,GAAG,GAAGF,KAAK,GAAGA,KAAK,CAACE,GAAT,GAAe,MAAhC;AAEA,QAAMC,kBAAkB,GAAGN,KAAK,CAACO,WAAN,CAAkB,MAAM;AACjD,UAAMC,KAAK,GAAGV,QAAQ,EAAtB;AACA,6BACKU,KADL;AAEEC,MAAAA,MAAM,EAAED,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAkBP,KAAD,sBACpBA,KADoB;AAEvBK,QAAAA,KAAK,EAAEX,gBAAgB,CAACM,KAAK,CAACE,GAAP;AAFA,QAAjB;AAFV;AAOD,GAT0B,EASxB,CAACP,QAAD,EAAWD,gBAAX,CATwB,CAA3B;AAWAG,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAM;AACpB,WAAOZ,cAAP,aAAOA,cAAP,uBAAOA,cAAc,CAAGM,GAAH,EAAQC,kBAAR,CAArB;AACD,GAFD,EAEG,CAACP,cAAD,EAAiBO,kBAAjB,EAAqCD,GAArC,CAFH;AAGD","sourcesContent":["import * as React from 'react';\r\nimport { NavigationState } from '@react-navigation/routers';\r\nimport NavigationBuilderContext from './NavigationBuilderContext';\r\nimport NavigationRouteContext from './NavigationRouteContext';\r\n\r\nexport default function useOnGetState({\r\n  getStateForRoute,\r\n  getState,\r\n}: {\r\n  getStateForRoute: (routeName: string) => NavigationState | undefined;\r\n  getState: () => NavigationState;\r\n}) {\r\n  const { addStateGetter } = React.useContext(NavigationBuilderContext);\r\n  const route = React.useContext(NavigationRouteContext);\r\n  const key = route ? route.key : 'root';\r\n\r\n  const getRehydratedState = React.useCallback(() => {\r\n    const state = getState();\r\n    return {\r\n      ...state,\r\n      routes: state.routes.map((route) => ({\r\n        ...route,\r\n        state: getStateForRoute(route.key),\r\n      })),\r\n    };\r\n  }, [getState, getStateForRoute]);\r\n\r\n  React.useEffect(() => {\r\n    return addStateGetter?.(key, getRehydratedState);\r\n  }, [addStateGetter, getRehydratedState, key]);\r\n}\r\n"]}
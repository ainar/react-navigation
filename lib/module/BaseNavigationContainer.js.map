{"version":3,"sources":["BaseNavigationContainer.tsx"],"names":["React","CommonActions","EnsureSingleNavigator","NavigationBuilderContext","ScheduleUpdateContext","useFocusedListeners","useDevTools","useStateGetters","useEventEmitter","useSyncState","isSerializable","MISSING_CONTEXT_ERROR","NOT_INITIALIZED_ERROR","NavigationStateContext","createContext","isDefault","getKey","Error","setKey","getState","setState","hasWarnedForSerialization","getPartialState","state","undefined","key","routeNames","partialState","stale","routes","map","route","BaseNavigationContainer","forwardRef","initialState","onStateChange","independent","children","ref","parent","useContext","scheduleUpdate","flushUpdates","isFirstMountRef","useRef","skipTrackingRef","navigatorKeyRef","useCallback","current","reset","trackState","trackAction","enabled","name","listeners","addListener","addFocusedListener","getStateForRoute","addStateGetter","dispatch","action","navigation","canGoBack","result","handled","resetRoot","getRootState","emitter","useImperativeHandle","Object","keys","reduce","acc","args","create","builderContext","useMemo","scheduleContext","context","useEffect","process","env","NODE_ENV","console","warn","emit","type","data"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  CommonActions,\r\n  Route,\r\n  NavigationState,\r\n  InitialState,\r\n  PartialState,\r\n  NavigationAction,\r\n} from '@react-navigation/routers';\r\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\r\nimport NavigationBuilderContext from './NavigationBuilderContext';\r\nimport { ScheduleUpdateContext } from './useScheduleUpdate';\r\nimport useFocusedListeners from './useFocusedListeners';\r\nimport useDevTools from './useDevTools';\r\nimport useStateGetters from './useStateGetters';\r\nimport useEventEmitter from './useEventEmitter';\r\nimport useSyncState from './useSyncState';\r\nimport isSerializable from './isSerializable';\r\n\r\nimport { NavigationContainerRef, NavigationContainerProps } from './types';\r\n\r\ntype State = NavigationState | PartialState<NavigationState> | undefined;\r\n\r\nconst MISSING_CONTEXT_ERROR =\r\n  \"Couldn't find a navigation context. Have you wrapped your app with 'NavigationContainer'? See https://reactnavigation.org/docs/getting-started for setup instructions.\";\r\n\r\nconst NOT_INITIALIZED_ERROR =\r\n  \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";\r\n\r\nexport const NavigationStateContext = React.createContext<{\r\n  isDefault?: true;\r\n  state?: NavigationState | PartialState<NavigationState>;\r\n  getKey: () => string | undefined;\r\n  setKey: (key: string) => void;\r\n  getState: () => NavigationState | PartialState<NavigationState> | undefined;\r\n  setState: (\r\n    state: NavigationState | PartialState<NavigationState> | undefined\r\n  ) => void;\r\n}>({\r\n  isDefault: true,\r\n\r\n  get getKey(): any {\r\n    throw new Error(MISSING_CONTEXT_ERROR);\r\n  },\r\n  get setKey(): any {\r\n    throw new Error(MISSING_CONTEXT_ERROR);\r\n  },\r\n  get getState(): any {\r\n    throw new Error(MISSING_CONTEXT_ERROR);\r\n  },\r\n  get setState(): any {\r\n    throw new Error(MISSING_CONTEXT_ERROR);\r\n  },\r\n});\r\n\r\nlet hasWarnedForSerialization = false;\r\n\r\n/**\r\n * Remove `key` and `routeNames` from the state objects recursively to get partial state.\r\n *\r\n * @param state Initial state object.\r\n */\r\nconst getPartialState = (\r\n  state: InitialState | undefined\r\n): PartialState<NavigationState> | undefined => {\r\n  if (state === undefined) {\r\n    return;\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  const { key, routeNames, ...partialState } = state;\r\n\r\n  // @ts-ignore\r\n  return {\r\n    ...partialState,\r\n    stale: true,\r\n    routes: state.routes.map((route) => {\r\n      if (route.state === undefined) {\r\n        return route as Route<string> & {\r\n          state?: PartialState<NavigationState>;\r\n        };\r\n      }\r\n\r\n      return { ...route, state: getPartialState(route.state) };\r\n    }),\r\n  };\r\n};\r\n\r\n/**\r\n * Container component which holds the navigation state.\r\n * This should be rendered at the root wrapping the whole app.\r\n *\r\n * @param props.initialState Initial state object for the navigation tree.\r\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\r\n * @param props.children Child elements to render the content.\r\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\r\n */\r\nconst BaseNavigationContainer = React.forwardRef(\r\n  function BaseNavigationContainer(\r\n    {\r\n      initialState,\r\n      onStateChange,\r\n      independent,\r\n      children,\r\n    }: NavigationContainerProps,\r\n    ref?: React.Ref<NavigationContainerRef>\r\n  ) {\r\n    const parent = React.useContext(NavigationStateContext);\r\n\r\n    if (!parent.isDefault && !independent) {\r\n      throw new Error(\r\n        \"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, pass 'independent={true}' explicitely. Note that this will make the child navigators disconnected from the parent and you won't be able to navigate between them.\"\r\n      );\r\n    }\r\n\r\n    const [\r\n      state,\r\n      getState,\r\n      setState,\r\n      scheduleUpdate,\r\n      flushUpdates,\r\n    ] = useSyncState<State>(() =>\r\n      getPartialState(initialState == null ? undefined : initialState)\r\n    );\r\n\r\n    const isFirstMountRef = React.useRef<boolean>(true);\r\n    const skipTrackingRef = React.useRef<boolean>(false);\r\n\r\n    const navigatorKeyRef = React.useRef<string | undefined>();\r\n\r\n    const getKey = React.useCallback(() => navigatorKeyRef.current, []);\r\n\r\n    const setKey = React.useCallback((key: string) => {\r\n      navigatorKeyRef.current = key;\r\n    }, []);\r\n\r\n    const reset = React.useCallback(\r\n      (state: NavigationState) => {\r\n        skipTrackingRef.current = true;\r\n        setState(state);\r\n      },\r\n      [setState]\r\n    );\r\n\r\n    const { trackState, trackAction } = useDevTools({\r\n      enabled: false,\r\n      name: '@react-navigation',\r\n      reset,\r\n      state,\r\n    });\r\n\r\n    const {\r\n      listeners,\r\n      addListener: addFocusedListener,\r\n    } = useFocusedListeners();\r\n\r\n    const { getStateForRoute, addStateGetter } = useStateGetters();\r\n\r\n    const dispatch = (\r\n      action: NavigationAction | ((state: NavigationState) => NavigationAction)\r\n    ) => {\r\n      if (listeners[0] == null) {\r\n        throw new Error(NOT_INITIALIZED_ERROR);\r\n      }\r\n\r\n      listeners[0]((navigation) => navigation.dispatch(action));\r\n    };\r\n\r\n    const canGoBack = () => {\r\n      if (listeners[0] == null) {\r\n        return false;\r\n      }\r\n\r\n      const { result, handled } = listeners[0]((navigation) =>\r\n        navigation.canGoBack()\r\n      );\r\n\r\n      if (handled) {\r\n        return result;\r\n      } else {\r\n        return false;\r\n      }\r\n    };\r\n\r\n    const resetRoot = React.useCallback(\r\n      (state?: PartialState<NavigationState> | NavigationState) => {\r\n        trackAction('@@RESET_ROOT');\r\n        setState(state);\r\n      },\r\n      [setState, trackAction]\r\n    );\r\n\r\n    const getRootState = React.useCallback(() => {\r\n      return getStateForRoute('root');\r\n    }, [getStateForRoute]);\r\n\r\n    const emitter = useEventEmitter();\r\n\r\n    React.useImperativeHandle(ref, () => ({\r\n      ...(Object.keys(CommonActions) as (keyof typeof CommonActions)[]).reduce<\r\n        any\r\n      >((acc, name) => {\r\n        acc[name] = (...args: any[]) =>\r\n          dispatch(\r\n            CommonActions[name](\r\n              // @ts-ignore\r\n              ...args\r\n            )\r\n          );\r\n        return acc;\r\n      }, {}),\r\n      ...emitter.create('root'),\r\n      resetRoot,\r\n      dispatch,\r\n      canGoBack,\r\n      getRootState,\r\n    }));\r\n\r\n    const builderContext = React.useMemo(\r\n      () => ({\r\n        addFocusedListener,\r\n        addStateGetter,\r\n        trackAction,\r\n      }),\r\n      [addFocusedListener, trackAction, addStateGetter]\r\n    );\r\n\r\n    const scheduleContext = React.useMemo(\r\n      () => ({ scheduleUpdate, flushUpdates }),\r\n      [scheduleUpdate, flushUpdates]\r\n    );\r\n\r\n    const context = React.useMemo(\r\n      () => ({\r\n        state,\r\n        getState,\r\n        setState,\r\n        getKey,\r\n        setKey,\r\n      }),\r\n      [getKey, getState, setKey, setState, state]\r\n    );\r\n\r\n    React.useEffect(() => {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        if (\r\n          state !== undefined &&\r\n          !isSerializable(state) &&\r\n          !hasWarnedForSerialization\r\n        ) {\r\n          hasWarnedForSerialization = true;\r\n\r\n          console.warn(\r\n            \"Non-serializable values were found in the navigation state, which can break usage such as persisting and restoring state. This might happen if you passed non-serializable values such as function, class instances etc. in params. If you need to use components with callbacks in your options, you can use 'navigation.setOptions' instead. See https://reactnavigation.org/docs/troubleshooting#i-get-the-warning-non-serializable-values-were-found-in-the-navigation-state for more details.\"\r\n          );\r\n        }\r\n      }\r\n\r\n      emitter.emit({\r\n        type: 'state',\r\n        data: { state },\r\n      });\r\n\r\n      if (skipTrackingRef.current) {\r\n        skipTrackingRef.current = false;\r\n      } else {\r\n        trackState(getRootState);\r\n      }\r\n\r\n      if (!isFirstMountRef.current && onStateChange) {\r\n        onStateChange(getRootState());\r\n      }\r\n\r\n      isFirstMountRef.current = false;\r\n    }, [onStateChange, trackState, getRootState, emitter, state]);\r\n\r\n    return (\r\n      <ScheduleUpdateContext.Provider value={scheduleContext}>\r\n        <NavigationBuilderContext.Provider value={builderContext}>\r\n          <NavigationStateContext.Provider value={context}>\r\n            <EnsureSingleNavigator>{children}</EnsureSingleNavigator>\r\n          </NavigationStateContext.Provider>\r\n        </NavigationBuilderContext.Provider>\r\n      </ScheduleUpdateContext.Provider>\r\n    );\r\n  }\r\n);\r\n\r\nexport default BaseNavigationContainer;\r\n"]}
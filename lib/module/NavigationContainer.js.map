{"version":3,"sources":["NavigationContainer.tsx"],"names":["React","BaseNavigationContainer","ThemeProvider","DefaultTheme","useBackButton","NavigationContainer","forwardRef","ref","theme","rest","refContainer","useRef","useImperativeHandle","current"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,uBADF,QAIO,wBAJP;AAKA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAOA;;;;;;;;;;;AAWA,MAAMC,mBAAmB,GAAGL,KAAK,CAACM,UAAN,CAAiB,SAASD,mBAAT,OAE3CE,GAF2C,EAG3C;AAAA,MAFA;AAAEC,IAAAA,KAAK,GAAGL;AAAV,GAEA;AAAA,MAF2BM,IAE3B;;AACA,QAAMC,YAAY,GAAGV,KAAK,CAACW,MAAN,CAAqC,IAArC,CAArB;AAEAP,EAAAA,aAAa,CAACM,YAAD,CAAb;AAEAV,EAAAA,KAAK,CAACY,mBAAN,CAA0BL,GAA1B,EAA+B,MAAMG,YAAY,CAACG,OAAlD;AAEA,sBACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEL;AAAtB,kBACE,oBAAC,uBAAD,eAA6BC,IAA7B;AAAmC,IAAA,GAAG,EAAEC;AAAxC,KADF,CADF;AAKD,CAf2B,CAA5B;AAiBA,eAAeL,mBAAf","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  BaseNavigationContainer,\r\n  NavigationContainerProps,\r\n  NavigationContainerRef,\r\n} from '@react-navigation/core';\r\nimport ThemeProvider from './theming/ThemeProvider';\r\nimport DefaultTheme from './theming/DefaultTheme';\r\nimport useBackButton from './useBackButton';\r\nimport { Theme } from './types';\r\n\r\ntype Props = NavigationContainerProps & {\r\n  theme?: Theme;\r\n};\r\n\r\n/**\r\n * Container component which holds the navigation state\r\n * designed for mobile apps.\r\n * This should be rendered at the root wrapping the whole app.\r\n *\r\n * @param props.initialState Initial state object for the navigation tree.\r\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\r\n * @param props.theme Theme object for the navigators.\r\n * @param props.children Child elements to render the content.\r\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\r\n */\r\nconst NavigationContainer = React.forwardRef(function NavigationContainer(\r\n  { theme = DefaultTheme, ...rest }: Props,\r\n  ref?: React.Ref<NavigationContainerRef | null>\r\n) {\r\n  const refContainer = React.useRef<NavigationContainerRef>(null);\r\n\r\n  useBackButton(refContainer);\r\n\r\n  React.useImperativeHandle(ref, () => refContainer.current);\r\n\r\n  return (\r\n    <ThemeProvider value={theme}>\r\n      <BaseNavigationContainer {...rest} ref={refContainer} />\r\n    </ThemeProvider>\r\n  );\r\n});\r\n\r\nexport default NavigationContainer;\r\n"]}
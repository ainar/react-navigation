{"version":3,"sources":["useChildActionListeners.tsx"],"names":["React","useChildActionListeners","current","listeners","useRef","addListener","useCallback","listener","push","index","indexOf","splice"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAGA;;;AAGA,eAAe,SAASC,uBAAT,GAAmC;AAChD,QAAM;AAAEC,IAAAA,OAAO,EAAEC;AAAX,MAAyBH,KAAK,CAACI,MAAN,CAAoC,EAApC,CAA/B;AAEA,QAAMC,WAAW,GAAGL,KAAK,CAACM,WAAN,CACjBC,QAAD,IAAmC;AACjCJ,IAAAA,SAAS,CAACK,IAAV,CAAeD,QAAf;AAEA,WAAO,MAAM;AACX,YAAME,KAAK,GAAGN,SAAS,CAACO,OAAV,CAAkBH,QAAlB,CAAd;AAEAJ,MAAAA,SAAS,CAACQ,MAAV,CAAiBF,KAAjB,EAAwB,CAAxB;AACD,KAJD;AAKD,GATiB,EAUlB,CAACN,SAAD,CAVkB,CAApB;AAaA,SAAO;AACLA,IAAAA,SADK;AAELE,IAAAA;AAFK,GAAP;AAID","sourcesContent":["import * as React from 'react';\r\nimport { ChildActionListener } from './NavigationBuilderContext';\r\n\r\n/**\r\n * Hook which lets child navigators add action listeners.\r\n */\r\nexport default function useChildActionListeners() {\r\n  const { current: listeners } = React.useRef<ChildActionListener[]>([]);\r\n\r\n  const addListener = React.useCallback(\r\n    (listener: ChildActionListener) => {\r\n      listeners.push(listener);\r\n\r\n      return () => {\r\n        const index = listeners.indexOf(listener);\r\n\r\n        listeners.splice(index, 1);\r\n      };\r\n    },\r\n    [listeners]\r\n  );\r\n\r\n  return {\r\n    listeners,\r\n    addListener,\r\n  };\r\n}\r\n"]}